name: Manually execute scheduled task 

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        options:
        - dev
        - test
        - uat
        - oat
        - prod
      appname:
        type: choice
        description: Select application
        options:
        - ingest

env:
  AWS_DEFAULT_REGION: eu-west-2
jobs:
  deploy-dev:
    name: "Manually executing ${{ github.event.inputs.appname || 'ingest' }} scheduled task in DEV"
    if: github.event.inputs.environment == 'dev'
    environment: DEV
    runs-on: ubuntu-latest
    steps:
      # credentials to connect to AWS 
      - name: Configure AWS credentials (dev/test)
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_ID }}
          aws-secret-access-key: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_SECRET }}
          aws-region: eu-west-2
          role-session-name: GitHubActionsDev

      - name: Update CloudWatch Event Rule
        run: |
          aws events put-rule --name crnccd-ecs-dev-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "rate(1 minute)"
          aws events enable-rule --name crnccd-ecs-dev-se-${{ github.event.inputs.appname}}-cw-event-rule

      - name: Wait for 90 seconds
        run: |
          sleep 90

      - name: Restore Original Schedule
        run: |
          aws events put-rule --name crnccd-ecs-dev-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "cron(0 20 * * ? *)"
          aws events enable-rule --name crnccd-ecs-dev-se-${{ github.event.inputs.appname}}-cw-event-rule

  deploy-test:
    name: "Manually executing ${{ github.event.inputs.appname || 'ingest' }} scheduled task in TEST"
    if: github.event.inputs.environment == 'test'
    environment: TEST
    runs-on: ubuntu-latest
    steps:
      # credentials to connect to AWS 
      - name: Configure AWS credentials (dev/test)
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_ID }}
          aws-secret-access-key: ${{ secrets.NIHR_GITHUB_ACTIONS_IAM_SECRET }}
          aws-region: eu-west-2
          role-session-name: GitHubActionsTest

      - name: Update CloudWatch Event Rule
        run: |
          aws events put-rule --name crnccd-ecs-test-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "rate(1 minute)"
          aws events enable-rule --name crnccd-ecs-test-se-${{ github.event.inputs.appname}}-cw-event-rule

      - name: Wait for 90 seconds
        run: |
          sleep 90

      - name: Restore Original Schedule
        run: |
          aws events put-rule --name crnccd-ecs-test-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "cron(0 20 * * ? *)"
          aws events enable-rule --name crnccd-ecs-test-se-${{ github.event.inputs.appname}}-cw-event-rule

  deploy-uat:
    name: "Manually executing ${{ github.event.inputs.appname || 'ingest' }} scheduled task in UAT"
    if: github.event.inputs.environment == 'uat'
    environment: UAT
    runs-on: ubuntu-latest
    steps:
      # credentials to connect to AWS 
      - name: Configure AWS credentials (uat)
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ secrets.CRNCC_STAGING_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CRNCC_STAGING_IAM_ACCESS_KEY_SECRET }}
          aws-region: eu-west-2
          role-session-name: GitHubActionsUat

      - name: Update CloudWatch Event Rule
        run: |
          aws events put-rule --name crnccs-ecs-uat-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "rate(1 minute)"
          aws events enable-rule --name crnccs-ecs-uat-se-${{ github.event.inputs.appname}}-cw-event-rule

      - name: Wait for 90 seconds
        run: |
          sleep 90

      - name: Restore Original Schedule
        run: |
          aws events put-rule --name crnccs-ecs-uat-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "cron(0 20 * * ? *)"
          aws events enable-rule --name crnccs-ecs-uat-se-${{ github.event.inputs.appname}}-cw-event-rule


  deploy-oat:
    name: "Manually executing ${{ github.event.inputs.appname || 'ingest' }} scheduled task in OAT"
    if: github.event.inputs.environment == 'oat'
    environment: OAT
    runs-on: ubuntu-latest
    steps:
      # credentials to connect to AWS 
      - name: Configure AWS credentials (oat/prod)
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ secrets.CRNCC_PROD_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CRNCC_PROD_IAM_ACCESS_KEY_SECRET }}
          aws-region: eu-west-2
          role-session-name: GitHubActionsOat

      - name: Update CloudWatch Event Rule
        run: |
          aws events put-rule --name crnccp-ecs-oat-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "rate(1 minute)"
          aws events enable-rule --name crnccp-ecs-oat-se-${{ github.event.inputs.appname}}-cw-event-rule

      - name: Wait for 90 seconds
        run: |
          sleep 90

      - name: Restore Original Schedule
        run: |
          aws events put-rule --name crnccp-ecs-oat-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "cron(0 20 * * ? *)"
          aws events enable-rule --name crnccp-ecs-oat-se-${{ github.event.inputs.appname}}-cw-event-rule


  deploy-prod:
    name: "Manually executing ${{ github.event.inputs.appname || 'ingest' }} scheduled task in PROD"
    if: github.event.inputs.environment == 'prod'
    environment: PROD
    runs-on: ubuntu-latest
    steps:
      # credentials to connect to AWS 
      - name: Configure AWS credentials (oat/prod)
        uses: aws-actions/configure-aws-credentials@v1

        with:
          aws-access-key-id: ${{ secrets.CRNCC_PROD_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CRNCC_PROD_IAM_ACCESS_KEY_SECRET }}
          aws-region: eu-west-2
          role-session-name: GitHubActionsProd

      - name: Update CloudWatch Event Rule
        run: |
          aws events put-rule --name crnccp-ecs-prod-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "rate(1 minute)"
          aws events enable-rule --name crnccp-ecs-prod-se-${{ github.event.inputs.appname}}-cw-event-rule

      - name: Wait for 90 seconds
        run: |
          sleep 90

      - name: Restore Original Schedule
        run: |
          aws events put-rule --name crnccp-ecs-prod-se-${{ github.event.inputs.appname}}-cw-event-rule --schedule-expression "cron(0 20 * * ? *)"
          aws events enable-rule --name crnccp-ecs-prod-se-${{ github.event.inputs.appname}}-cw-event-rule